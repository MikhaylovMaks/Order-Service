version: '3.8'

services:
  service:
    build:
      context: .
      target: final
    ports:
      - '8081:8081'
    depends_on:
      db:
        condition: service_started
      kafka:
        condition: service_healthy
    volumes:
      - ./config/config.yaml:/config/config.yaml:ro
      - ./web:/web:ro
    environment:
      CONFIG_PATH: /config/config.yaml
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: orders_user
      POSTGRES_PASSWORD: maksim19
      POSTGRES_DB: orders_db
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: orders

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: orders_user
      POSTGRES_PASSWORD: maksim19
      POSTGRES_DB: orders_db
    ports:
      - '5432:5432'
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '2181:2181'

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    restart: always
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
      - '29092:29092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "bash", "-lc", "kafka-topics --bootstrap-server localhost:9092 --list >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    restart: always
    depends_on:
      - kafka
    ports:
      - '9000:9000'
    environment:
      KAFKA_BROKERCONNECT: 'kafka:9092'
      JVM_OPTS: '-Xms32M -Xmx64M'

volumes:
  db-data:
